name: release
on:
  push:
    tags:
      - "v*"
jobs:
  build-linux-and-darwin:
    strategy:
      matrix:
        GOOS: [linux, darwin]
    runs-on: ubuntu-latest
    environment: prod
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Unshallow
        run: git fetch --prune --unshallow
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.21
        #we get the release id from the git so we can identify the files in the cache (we use the cache to merge windows and linux/darwin builds)
      - shell: bash
        run: |
          echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
      #save the cache
      - id: cache
        uses: actions/cache@v3
        with:
          path: dist/${{ matrix.GOOS }}
          key: ${{ matrix.GOOS }}-${{ env.sha_short }}
      #build the darwin and linux here notice the split option (requires pro license of goreleaser)
      - name: Build
        uses: goreleaser/goreleaser-action@v5
        with:
          version: latest
          distribution: goreleaser-pro
          args: release --clean --split
        env:
          GPG_FINGERPRINT: ${{ steps.import_gpg.outputs.fingerprint }}
          # GitHub sets this automatically
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GORELEASER_KEY: ${{ secrets.GORELEASER_KEY }}
          GOOS: ${{ matrix.GOOS }}

  release:
    runs-on: ubuntu-latest
    environment: prod
    needs:
      - build-linux-and-darwin
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4
      - name: Unshallow
        run: git fetch --prune --unshallow
      - uses: actions/setup-go@v3
        with:
          go-version: 1.21
          cache: true
      # copy the cashes from prepare
      - shell: bash
        run: |
          echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
      - uses: actions/cache@v3
        with:
          path: dist/linux
          key: linux-${{ env.sha_short }}
      - uses: actions/cache@v3
        with:
          path: dist/darwin
          key: darwin-${{ env.sha_short }}
      - uses: actions/cache@v3
        with:
          path: dist/windows
          key: windows-${{ env.sha_short }}
          enableCrossOsArchive: true
      - name: Import GPG key
        id: import_gpg
        uses: crazy-max/ghaction-import-gpg@v5.0.0
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
      - name: Create SHA256 checksums, sign them and release
        uses: goreleaser/goreleaser-action@v5
        with:
          version: latest
          distribution: goreleaser-pro
          args: continue --merge
        env:
          GPG_FINGERPRINT: ${{ steps.import_gpg.outputs.fingerprint }}
          # GitHub sets this automatically
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GORELEASER_KEY: ${{ secrets.GORELEASER_KEY }}
          GH_TOKEN_ALEX_HOMEBREW_METALSOFT: ${{ secrets.GH_TOKEN_ALEX_HOMEBREW_METALSOFT }}
